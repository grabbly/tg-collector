version: '3.8'

services:
  archive-drop:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: archive-drop-bot
    restart: unless-stopped
    working_dir: /app
    environment:
      LOG_LEVEL: INFO
      STORAGE_DIR: ${STORAGE_DIR}
      PYTHONPATH: ${PYTHONPATH}
      BOT_TOKEN: ${BOT_TOKEN}
    volumes:
      # Persistent storage for collected messages (host bind-mount)
      - /opt/tg-collector/storage:/app/storage
      # Optional: custom config directory
      # - ./config:/app/config:ro
    # Optional: Expose health check port
    # ports:
    #   - "8080:8080"
    healthcheck:
      test: ["CMD", "python", "-c", "import os; exit(0 if os.path.exists('/app/storage') else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  web-interface:
    build:
      context: ..
      dockerfile: web/Dockerfile
    container_name: archive-drop-web
    restart: unless-stopped
    environment:
      STORAGE_DIR: /app/storage
      DEBUG: "false"
    volumes:
      # Same storage as bot (read-only access)
      - /opt/tg-collector/storage:/app/storage:ro
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.3'
        reservations:
          memory: 64M
          cpus: '0.1'
    depends_on:
      - archive-drop